plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 29

    buildToolsVersion "29.0.2"

    signingConfigs {
        release {
            keyAlias 'imooc'
            keyPassword '123456'
            storeFile file('./test.key')
            storePassword '123456'
        }
    }

    defaultConfig {
        applicationId "com.imooc.demo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BUILD_TIME",
                    "\"${System.currentTimeMillis()}\"")

            resValue("string", "greeting", "hello!")

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        release {
            buildConfigField("String", "BUILD_TIME",
                    "\"0\"")

            resValue("string", "greeting", "hello!")

            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    flavorDimensions "channel"

    productFlavors {
        // 在开发阶段为了得到更快的构建速度，设置minSdkVersion 26，不走multidex分包
//        dev {
//            minSdkVersion 26
//        }
        baidu {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [MTA_CHANNEL_VALUE: "xiaomi"]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name.equals('release')) {
                def fileName =
                        "Demo_${variant.productFlavors[0].name}" +
                                "_${defaultConfig.versionName}.apk"
                output.outputFileName = fileName
            }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(':biz_reading')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation APP_COMPAT
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}


apply from: project.file('read_local_prop.gradle')

// 编译期间检测依赖库的合法性
//configurations.all {
//    resolutionStrategy.eachDependency { details ->
//        String dependency = details.requested.toString()
//        if (dependency.contains("com.google.android.material")) {
//            throw new RuntimeException("不允许使用 $dependency")
//        }
//    }
//}


Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())
//获取
def username = properties.get("USER_NAME")
def password = properties.get("PASSWORD")
print("Test user name = " + username)
print("Test password = " + password)












